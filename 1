from flask import Flask, request
import logging
import json
import random
import requests

app = Flask(__name__)

logging.basicConfig(level=logging.INFO)

#список всех пород
response = requests.get('https://dog.ceo/api/breeds/list/all')

dogs = []
for dog in response.json()['message']:
    dogs.append(dog.capitalize())

# создаём словарь, где для каждого пользователя мы будем хранить его имя
sessionStorage = {}


@app.route('/post', methods=['POST'])
def main():
    logging.info('Request: %r', request.json)
    response = {
        'session': request.json['session'],
        'version': request.json['version'],
        'response': {
            'end_session': False
        }
    }
    handle_dialog(response, request.json)
    logging.info('Response: %r', response)
    return json.dumps(response)


def handle_dialog(res, req):
    user_id = req['session']['user_id']

    if req['session']['new']:
        res['response']['text'] = 'Привет! Назови свое имя!'
        # созда\м словарь в который в будущем положим имя пользователя
        sessionStorage[user_id] = {
            'first_name': None,
            'dog': None,
            'count': 0,
            'correct': 0
        }
        return

    # если пользователь не новый, то попадаем сюда.
    # если поле имени пустое, то это говорит о том,
    # что пользователь ещё не представился.
    if sessionStorage[user_id]['first_name'] is None:
        # в последнем его сообщение ищем имя.
        first_name = get_first_name(req)
        # если не нашли, то сообщаем пользователю что не расслышали.
        if first_name is None:
            res['response']['text'] = \
                'Не расслышала имя. Повтори, пожалуйста!'
        else:
            sessionStorage[user_id]['first_name'] = first_name
            res['response'][
                'text'] = 'Приятно познакомиться, ' + first_name.title() \
                          + '. Я - Алиса.\nНачнём викторину?'
            res['response']['buttons'] = [
                {
                    'title': 'Да',
                    'hide': True
                },
                {
                    'title': 'Нет',
                    'hide': True
                }
            ]
    else:
        answer = get_answer(req)

        if answer in dogs:
            if answer == sessionStorage[user_id]['dog']:
                res['response']['text'] = 'Верно!\nПродолжим?'
                sessionStorage[user_id]['correct'] += 1
            else:
                res['response']['text'] = 'Не угадали!\nПродолжим?'
            sessionStorage[user_id]['count'] += 1
            res['response']['buttons'] = [
                {
                    'title': 'Да',
                    'hide': True
                },
                {
                    'title': 'Нет',
                    'hide': True
                }
            ]
        elif answer == 'Да':
            sessionStorage[user_id]['dog'] = dogs[random.randint(0, len(dogs) - 1)]

            response = requests.get('https://dog.ceo/api/breed/' + sessionStorage[user_id]['dog'] + '/images/random')
            image_response = requests.post(
                'https://dialogs.yandex.net/api/v1/skills/38d3f58f-57e7-4428-a5fb-52b8529b3820/images',
                headers={'Authorization': 'OAuth AQAAAAAgLPFXAAT7o1Qdp3-o70P2u9cfPxM_t0Q',
                         "Content-Type": "application/json"},
                data=json.dumps({'url': response.json()['message']})
            )

            res['response']['card'] = {}
            res['response']['card']['type'] = 'BigImage'
            res['response']['card']['title'] = 'Что за порода?'
            res['response']['card']['image_id'] = image_response.json()['image']['id']
            res['response']['text'] = 'Что за порода?\nhttps://avatars.mds.yandex.net/get-dialogs-skill-card/' + \
                                      image_response.json()['image']['id'] + '/one-x1'
            answers = []
            answers.append(sessionStorage[user_id]['dog'])
            while len(answers) < 3:
                new = dogs[random.randint(0, len(dogs) - 1)]
                if new not in answers:
                    answers.append(new)
            answers.sort()
            res['response']['buttons'] = []
            for i in answers:
                res['response']['buttons'].append({
                    "title": i,
                    "hide": True
                })
        elif answer == 'Нет':
            res['response']['text'] = 'До встречи, ' + sessionStorage[user_id]['first_name'].title() + '!'
            if sessionStorage[user_id]['count']:
                res['response']['text'] += '\nПравильных ответов: ' + str(
                    sessionStorage[user_id]['correct']) + ' из ' + str(sessionStorage[user_id]['count'])
        else:
            res['response']['text'] = 'Играем дальше?'
            res['response']['buttons'] = [
                {
                    'title': 'Да',
                    'hide': True
                },
                {
                    'title': 'Нет',
                    'hide': True
                }
            ]

#получение ответа
def get_answer(req):
    return req['request']['original_utterance']


def get_first_name(req):
    # перебираем сущности
    for entity in req['request']['nlu']['entities']:
        # находим сущность с типом 'YANDEX.FIO'
        if entity['type'] == 'YANDEX.FIO':
            # Если есть сущность с ключом 'first_name',
            # то возвращаем ее значение.
            # Во всех остальных случаях возвращаем None.
            return entity['value'].get('first_name', None)


if __name__ == '__main__':
    app.run()
